import { Rectangle, Size } from './../../math/geometry/rectangle';
import { PlaneTransformation } from '../../math/geometry/planeTransformation';
import { Point } from '../../math/geometry';
import { GeomObject } from './geomObject';
import { Label } from '../../structs/label';
export declare class GeomLabel extends GeomObject {
    /** clones but does not bind to the entity and does not set the parent edge*/
    clone(): GeomObject;
    private _isPositioned;
    get isPositioned(): boolean;
    set isPositioned(value: boolean);
    /** this field is needed for interactive editing */
    attachmentSegmentEnd: Point;
    /** this field is needed for interactive editing */
    attachmentSegmentStart: Point;
    constructor(entity: Label, size: Size);
    private _boundingBox;
    get boundingBox(): Rectangle;
    private set boundingBox(value);
    setBoundingBox(b: Rectangle): void;
    get width(): number;
    set width(value: number);
    get height(): number;
    set height(value: number);
    get center(): Point;
    private set center(value);
    translate(delta: Point): void;
    transform(m: PlaneTransformation): void;
    positionCenter(p: Point): void;
}
