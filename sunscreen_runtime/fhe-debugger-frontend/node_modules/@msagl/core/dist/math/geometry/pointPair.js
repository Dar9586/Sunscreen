import { comparePointsYFirst as comparePointsYX } from '../../utils/compare';
import { distPP } from './point';
/** An unordered pair of points */
export class PointPair {
    constructor(first, second) {
        if (comparePointsYX(first, second) < 0) {
            this._first = first;
            this._second = second;
        }
        else {
            this._first = second;
            this._second = first;
        }
    }
    get first() {
        return this._first;
    }
    get second() {
        return this._second;
    }
    get Length() {
        return distPP(this._first, this._second);
    }
    CompareTo(other) {
        const cr = comparePointsYX(this._first, other._first);
        if (cr !== 0) {
            return cr;
        }
        return comparePointsYX(this._second, other._second);
    }
    static equal(pair0, pair1) {
        return pair0._first.equal(pair1._first) && pair0._second.equal(pair1._second);
    }
    toString() {
        return this._first + (' ' + this._second);
    }
}
//# sourceMappingURL=pointPair.js.map