// Per-instance results from ProjectionSolver.Solver.Solve().
export class Solution {
    constructor() {
        // The only failure condition is if there are one or more unsatisfiable constraints, such as cycles
        // or mutually exclusive equality constraints.
        this.NumberOfUnsatisfiableConstraints = 0;
        // The number of times the outer Project/Split loop was run.
        this.OuterProjectIterations = 0;
        // The number of times Project iterated internally; divide by OuterProjectIterations to get the average
        // inner iterations per outer iteration; see also MinInnerProjectIterations and MaxInnerProjectIterations.
        this.InnerProjectIterationsTotal = 0;
        // The minimum number of times Project iterated internally for any outer Project iterations.
        this.MinInnerProjectIterations = 0;
        // The maximum number of times Project iterated internally for any outer Project iterations.
        this.MaxInnerProjectIterations = 0;
        // The maximum depth of a constraint tree.
        this.MaxConstraintTreeDepth = 0;
        // The final value of the goal function.
        this.GoalFunctionValue = 0;
        // If true, the function ended due to TimeLimit being exceeded.
        this.TimeLimitExceeded = false;
        // If true, the function ended due to OuterProjectIterationsLimit being exceeded.
        this.OuterProjectIterationsLimitExceeded = false;
        // If true, a call to Project ended early due to InnerProjectIterationsLimit being exceeded.
        // The result may be nonfeasible.
        this.InnerProjectIterationsLimitExceeded = false;
    }
    // Indicates whether one or more execution limits were exceeded.
    get ExecutionLimitExceeded() {
        return this.TimeLimitExceeded || this.OuterProjectIterationsLimitExceeded || this.InnerProjectIterationsLimitExceeded;
    }
    // Shallow-copy everything, including the contained list.
    Clone() {
        const r = new Solution();
        r.GoalFunctionValue = this.GoalFunctionValue;
        r.InnerProjectIterationsLimitExceeded = this.InnerProjectIterationsLimitExceeded;
        r.InnerProjectIterationsTotal = this.InnerProjectIterationsTotal;
        r.MaxConstraintTreeDepth = this.MaxConstraintTreeDepth;
        r.OuterProjectIterations = this.OuterProjectIterations;
        r.OuterProjectIterationsLimitExceeded = this.OuterProjectIterationsLimitExceeded;
        r.AlgorithmUsed = this.AlgorithmUsed;
        r.NumberOfUnsatisfiableConstraints = this.NumberOfUnsatisfiableConstraints;
        r.MaxInnerProjectIterations = this.MaxInnerProjectIterations;
        return r;
    }
}
//# sourceMappingURL=Solution.js.map