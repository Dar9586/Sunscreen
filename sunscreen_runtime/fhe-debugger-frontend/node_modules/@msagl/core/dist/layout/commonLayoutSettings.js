import { EdgeRoutingSettings } from '../routing/EdgeRoutingSettings';
/** The common data of layout settings: it specifies the minumal allowed distance between the nodes,  the minimal size of the resulting bounding box, settings for edge routing, and the ratio for the graph boxes packing algorithm  */
export class CommonLayoutSettings {
    constructor() {
        this.edgeRoutingSettings = new EdgeRoutingSettings();
        this.nodeSeparation = 10;
        this.packingAspectRatio = 1.5;
    }
    static fromJSON(s) {
        const ret = new CommonLayoutSettings();
        if (s.nodeSeparation != 10) {
            ret.nodeSeparation = s.nodeSeparation;
        }
        if (s.packingAspectRatio) {
            ret.packingAspectRatio = s.packingAspectRatio;
        }
        if (s.edgeRoutingSettings) {
            ret.edgeRoutingSettings = EdgeRoutingSettings.fromJSON(s.edgeRoutingSettings);
        }
        return ret;
    }
    toJSON() {
        let differentFromDefault = false;
        const ret = {};
        if (this.nodeSeparation != 10) {
            ret.nodeSeparation = this.nodeSeparation;
            differentFromDefault = true;
        }
        if (this.packingAspectRatio != 1.5) {
            ret.packingAspectRatio = this.packingAspectRatio;
            differentFromDefault = true;
        }
        if ((ret.edgeRoutingSettings = this.edgeRoutingSettings.toJSON())) {
            differentFromDefault = true;
        }
        return differentFromDefault ? ret : undefined;
    }
    get NodeSeparation() {
        return this.nodeSeparation;
    }
    set NodeSeparation(value) {
        this.nodeSeparation = value;
    }
    get PackingAspectRatio() {
        return this.packingAspectRatio;
    }
    set PackingAspectRatio(value) {
        this.packingAspectRatio = value;
    }
}
//# sourceMappingURL=commonLayoutSettings.js.map