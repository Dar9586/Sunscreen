import { Point, Rectangle } from '../../math/geometry';
import { GeomEdge, GeomNode, Node } from '../..';
import { IGeomGraph } from './iGeomGraph';
export declare class GeomConnectedComponent implements IGeomGraph {
    RectangularBoundary: any;
    topNodes: Node[];
    constructor(topNodes: Node[]);
    get nodesBreadthFirst(): IterableIterator<GeomNode>;
    nodesBreadthFirst_(): IterableIterator<GeomNode>;
    deepNodeCount: number;
    get Clusters(): IterableIterator<IGeomGraph>;
    clusters(): IterableIterator<IGeomGraph>;
    get subgraphsDepthFirst(): IterableIterator<IGeomGraph>;
    subgraphsDepthFirst_(): IterableIterator<IGeomGraph>;
    uniformMargins: number;
    get shallowEdges(): IterableIterator<GeomEdge>;
    edges_(): IterableIterator<GeomEdge>;
    get shallowNodes(): IterableIterator<GeomNode>;
    shallowNodes_(): IterableIterator<GeomNode>;
    pumpTheBoxToTheGraphWithMargins(): Rectangle;
    get shallowNodeCount(): number;
    translate(delta: Point): void;
    boundingBox: Rectangle;
}
