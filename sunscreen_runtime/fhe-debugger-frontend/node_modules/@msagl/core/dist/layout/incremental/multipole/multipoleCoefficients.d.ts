import { Point } from '../../../math/geometry';
export declare class MultipoleCoefficients {
    z0: Complex;
    a: Complex[];
    p: number;
    static constructorNPA(precision: number, center: Point, points: Point[]): MultipoleCoefficients;
    static constructorPMM(center: Point, m1: MultipoleCoefficients, m2: MultipoleCoefficients): MultipoleCoefficients;
    static factorial(n: number): number;
    static binomial(n: number, k: number): number;
    sum(l: number, z0_minus_z1: Complex): Complex;
    shift(z1: Complex): Complex[];
    private compute;
    ApproximateForce(v: Point): Point;
    static Force(u: Point, v: Point): Point;
}
declare class Complex {
    constructor(re: number, im: number);
    static constructorN(re: number): Complex;
    divideBy(r: number): void;
    static Pow(a: Complex, k: number): Complex;
    re: number;
    im: number;
}
export {};
