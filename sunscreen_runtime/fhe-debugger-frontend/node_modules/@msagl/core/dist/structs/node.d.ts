import { Entity } from './entity';
import { Edge } from './edge';
/** Represent a node of a graph: has id, which is a string, and sets of in/out/self edges */
export declare class Node extends Entity {
    removeOutEdge(edge: Edge): void;
    removeInEdge(edge: Edge): void;
    private _id;
    /** the unique, in the parent graph, id of the node */
    get id(): string;
    set id(value: string);
    inEdges: Set<Edge>;
    outEdges: Set<Edge>;
    selfEdges: Set<Edge>;
    toString(): string;
    constructor(id: string);
    private _edges;
    get edges(): IterableIterator<Edge>;
    get outDegree(): number;
    get inDegree(): number;
    get selfDegree(): number;
    get degree(): number;
}
