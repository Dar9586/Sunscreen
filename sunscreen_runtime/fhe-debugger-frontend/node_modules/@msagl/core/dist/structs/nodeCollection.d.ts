import { Node } from './node';
import { Edge } from './edge';
import { Graph } from './graph';
export declare class NodeCollection {
    remove(node: Node): void;
    get size(): number;
    private nodes_;
    private graphs_;
    findShallow(id: string): Node;
    get nodesShallow(): IterableIterator<Node>;
    get graphs(): IterableIterator<Graph>;
    nodeMap: Map<string, Node>;
    private _edges;
    interGraphEdges(): IterableIterator<Edge>;
    get nodeShallowCount(): number;
    get edgeCount(): number;
    /**  returns the edges of shallow nodes */
    get edges(): IterableIterator<Edge>;
    addNode(node: Node): void;
    nodeIsConsistent(n: Node): boolean;
    isConsistent(): boolean;
}
