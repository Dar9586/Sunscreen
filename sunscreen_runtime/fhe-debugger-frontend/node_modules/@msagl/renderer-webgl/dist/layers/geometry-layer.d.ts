import { Layer, Position, Color, Unit, Accessor, LayerProps, UpdateParameters, DefaultProps } from '@deck.gl/core/typed';
import { Model } from '@luma.gl/engine';
import { Texture2D } from '@luma.gl/webgl';
export declare enum SHAPE {
    Rectangle = 0,
    Oval = 1,
    Diamond = 2
}
export declare type GeometryLayerProps<DataT = any> = {
    lineWidthUnits?: Unit;
    lineWidthScale?: number;
    lineWidthMinPixels?: number;
    lineWidthMaxPixels?: number;
    sizeScale?: number;
    stroked?: boolean;
    filled?: boolean;
    /** Only applies to SHAPE.Rectangle */
    cornerRadius?: number;
    nodeDepth?: Texture2D;
    highlightColors?: number[][];
    getPickingColor?: Accessor<DataT, Color>;
    getPosition?: Accessor<DataT, Position>;
    getSize?: Accessor<DataT, [number, number]>;
    getFillColor?: Accessor<DataT, Color>;
    getLineColor?: Accessor<DataT, Color>;
    getLineWidth?: Accessor<DataT, number>;
    getShape?: Accessor<DataT, SHAPE>;
} & LayerProps<DataT>;
export default class GeometryLayer<DataT> extends Layer<Required<GeometryLayerProps<DataT>>> {
    static defaultProps: DefaultProps<GeometryLayerProps<any>>;
    static layerName: string;
    state: {
        model?: Model;
    };
    getShaders(): any;
    initializeState(): void;
    updateState(params: UpdateParameters<this>): void;
    draw({ uniforms }: any): void;
    protected _getModel(gl: WebGLRenderingContext): Model;
}
